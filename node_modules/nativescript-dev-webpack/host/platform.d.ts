import { Observable } from "rxjs";
import { Path, PathFragment } from "@angular-devkit/core";
import { FileBuffer, Host, HostCapabilities, HostWatchOptions, HostWatchEvent, Stats } from "@angular-devkit/core/src/virtual-fs/host";
export declare class PlatformReplacementHost<StatsT extends object = {}> implements Host<StatsT> {
    protected _platforms: string[];
    protected _delegate: any;
    constructor(_platforms: string[], _delegate?: any);
    protected _resolve(path: any): any;
    private toSystemPath(path);
    readonly capabilities: HostCapabilities;
    write(path: Path, content: FileBuffer): Observable<void>;
    read(path: Path): Observable<FileBuffer>;
    delete(path: Path): Observable<void>;
    rename(from: Path, to: Path): Observable<void>;
    list(path: Path): Observable<PathFragment[]>;
    exists(path: Path): Observable<boolean>;
    isDirectory(path: Path): Observable<boolean>;
    isFile(path: Path): Observable<boolean>;
    stat(path: Path): Observable<Stats<StatsT>> | null;
    watch(path: Path, options?: HostWatchOptions): Observable<HostWatchEvent> | null;
}
